% Generated by roxygen2 (4.0.2): do not edit by hand
\name{loadDefinitiveModel}
\alias{loadDefinitiveModel}
\title{Load definitive fitted model from Rdata}
\usage{
loadDefinitiveModel(data, extents, slot = c("allmod", "auc", "kappa", "tss",
  "mod", "p"), algorithm = c("glm", "svm", "maxent", "mars", "randomForest",
  "cart.rpart", "cart.tree"), sourcedir = getwd())
}
\arguments{
\item{data}{Object with the same structure as the object returned by function bindPresAbs.}

\item{extents}{Named integer returned by function indextent (a named index
corresponding to the definitive extents to be considered)}

\item{slot}{Any character of the following: "allmod", auc", "kappa", "tss", "mod", "p"}

\item{algorithm}{Any character of the following: "glm", "svm", "maxent", "mars", "randomForest",
"cart.rpart" or "cart.tree"}

\item{sourcedir}{Character of the path where Rdata objects are}
}
\value{
Depending on the specified slot:
 \item{allmod }{fitted model using all data for training}
 \item{auc }{AUC statistic in the cross validation}
 \item{kappa }{kappa statistic in the cross validation}
 \item{tss }{true skill statistic in the cross validation }
 \item{mod }{fitted model with partitioned data}
 \item{p }{cross model prediction}
}
\description{
Load information from Rdata generated with function allModelling based
in an index to select the definitive fitted model/s, ideally, the index returned by
function indextent should be used.
}
\details{
detail.
}
\examples{
\donttest{
##delimit study area
data(Oak_phylo2)
data(sp_grid)
data(presaus)
data(biostack)
oak.extension<-boundingCoords(Oak_phylo2)
box.grid<-delimit(oak.extension, sp_grid, names(Oak_phylo2))
##modelling
modirs <-allModeling(data = presaus, varstack = biostack, k = 10, "mars")
##loading
auc_mars <-loadTestValues(data = presaus, "auc", "mars")
ind <-indextent(auc_mars)
def <-loadDefinitiveModel(presaus, ind, "allmod", "mars")
##example of prediction
projectionland <-biomat(cbind(box.grid[[2]][[1]], rep(1,nrow(box.grid[[2]][[1]]))), biostack)
p <-predict(def[[1]], projectionland[,-1])->p
spp<-SpatialPixelsDataFrame(box.grid[[2]][[1]], as.data.frame(p))
ras<-raster(spp)
plot(ras)
}
}
\author{
M. Iturbide \email{maibide@gmail.com}
}

